<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Prateek Sharma</title>
    <link>/</link>
    <description>Recent content on Prateek Sharma</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 09 Jul 2025 17:31:45 +0530</lastBuildDate>
    <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Study Assistant: Chrome Extension</title>
      <link>/projects/tts-study-assistant/</link>
      <pubDate>Wed, 09 Jul 2025 17:31:45 +0530</pubDate>
      <guid>/projects/tts-study-assistant/</guid>
      <description>&lt;h2 class=&#34;heading&#34; id=&#34;introduction&#34;&gt;&#xA;  Introduction&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#introduction&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;In this post, I’ll walk through the technical details of building a Study Assistant—a productivity tool that lets users save, organize, and listen to notes from any website. The solution consists of a Chrome extension (frontend) and a Go/Fiber backend, with secure authentication, domain-based note management, and text-to-speech (TTS) features.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 class=&#34;heading&#34; id=&#34;1-chrome-extension-technical-details&#34;&gt;&#xA;  1. Chrome Extension: Technical Details&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-chrome-extension-technical-details&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 class=&#34;heading&#34; id=&#34;architecture&#34;&gt;&#xA;  Architecture&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#architecture&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Popup UI:&lt;/strong&gt; Built with vanilla JS, HTML, and CSS for fast load and compatibility.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Content Scripts:&lt;/strong&gt; Injected into web pages to capture selected text and interact with the context menu.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Background Script:&lt;/strong&gt; Handles authentication, API calls, and communication between popup, content scripts, and backend.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Context Menus:&lt;/strong&gt; Adds a right-click menu for saving selected text as a note.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;TTS Integration:&lt;/strong&gt; Uses the Web Speech API (&lt;code&gt;window.speechSynthesis&lt;/code&gt;) for in-browser audio playback.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 class=&#34;heading&#34; id=&#34;key-features&#34;&gt;&#xA;  Key Features&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#key-features&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Save Notes:&lt;/strong&gt; Select text on any page, right-click, and save it as a note (with source URL and domain auto-detected).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Listen to Notes:&lt;/strong&gt; Play, pause, and replay notes using TTS directly from the popup.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Domain Awareness:&lt;/strong&gt; Notes are grouped and filtered by domain, including special handling for local files and PDFs.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Authentication:&lt;/strong&gt; Secure login with JWT/refresh tokens, passwords are pre-hashed (SHA-256) before sending to the backend.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Sync:&lt;/strong&gt; Notes are synced with the backend, so users can access them from the web dashboard as well.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 class=&#34;heading&#34; id=&#34;permissions--security&#34;&gt;&#xA;  Permissions &amp;amp; Security&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#permissions--security&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Permissions:&lt;/strong&gt; &lt;code&gt;activeTab&lt;/code&gt;, &lt;code&gt;contextMenus&lt;/code&gt;, &lt;code&gt;storage&lt;/code&gt;, &lt;code&gt;tts&lt;/code&gt;, and host permissions for all URLs.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Privacy:&lt;/strong&gt; No user data is sold or shared; only email, hashed password, and selected note content are sent to the backend.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Edge Cases:&lt;/strong&gt; Handles Chrome PDF viewer and local files by mapping their domains to a generic label (&amp;ldquo;Downloaded/Local file&amp;rdquo;).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 class=&#34;heading&#34; id=&#34;example-context-menu-handler&#34;&gt;&#xA;  Example: Context Menu Handler&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#example-context-menu-handler&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chrome.contextMenus.create({&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  id: &lt;span style=&#34;color:#666;font-style:italic&#34;&gt;&amp;#34;save-note&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  title: &lt;span style=&#34;color:#666;font-style:italic&#34;&gt;&amp;#34;Save Note&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  contexts: [&lt;span style=&#34;color:#666;font-style:italic&#34;&gt;&amp;#34;selection&amp;#34;&lt;/span&gt;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chrome.contextMenus.onClicked.addListener(&lt;span style=&#34;font-weight:bold;text-decoration:underline&#34;&gt;async&lt;/span&gt; (info, tab) =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;font-weight:bold;text-decoration:underline&#34;&gt;if&lt;/span&gt; (info.menuItemId === &lt;span style=&#34;color:#666;font-style:italic&#34;&gt;&amp;#34;save-note&amp;#34;&lt;/span&gt; &amp;amp;&amp;amp; info.selectionText) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#888;font-style:italic&#34;&gt;// Send selected text to backend&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#888;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;font-weight:bold;text-decoration:underline&#34;&gt;await&lt;/span&gt; apiClient.saveNote({&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      content: info.selectionText,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      source_url: tab.url,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      domain: extractDomain(tab.url),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h2 class=&#34;heading&#34; id=&#34;2-backend-design-go--fiber--gorm&#34;&gt;&#xA;  2. Backend Design (Go + Fiber + GORM)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2-backend-design-go--fiber--gorm&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 class=&#34;heading&#34; id=&#34;overview&#34;&gt;&#xA;  Overview&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#overview&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Framework:&lt;/strong&gt; Go with Fiber (Express-like web framework)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Database:&lt;/strong&gt; PostgreSQL, accessed via GORM ORM&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;API:&lt;/strong&gt; RESTful endpoints for authentication, notes CRUD, user profile, and stats&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;OpenAPI Spec:&lt;/strong&gt; Full API documentation via &lt;code&gt;openapi.json&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 class=&#34;heading&#34; id=&#34;authentication--security&#34;&gt;&#xA;  Authentication &amp;amp; Security&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#authentication--security&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;JWT Auth:&lt;/strong&gt; Access tokens for API calls, refresh tokens for session management&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Password Handling:&lt;/strong&gt; All passwords are pre-hashed (SHA-256) by the client; backend never sees plaintext passwords&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Token Rotation:&lt;/strong&gt; Refresh tokens are rotated and stored securely in the database&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 class=&#34;heading&#34; id=&#34;notes-model&#34;&gt;&#xA;  Notes Model&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#notes-model&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;font-weight:bold;font-style:italic;text-decoration:underline&#34;&gt;type&lt;/span&gt; Note &lt;span style=&#34;font-weight:bold;font-style:italic;text-decoration:underline&#34;&gt;struct&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ID         uuid.UUID      &lt;span style=&#34;color:#666;font-style:italic&#34;&gt;`gorm:&amp;#34;type:uuid;default:uuid_generate_v4();primaryKey&amp;#34;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    UserID     uuid.UUID      &lt;span style=&#34;color:#666;font-style:italic&#34;&gt;`gorm:&amp;#34;not null&amp;#34;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Content    &lt;span style=&#34;font-weight:bold;text-decoration:underline&#34;&gt;string&lt;/span&gt;         &lt;span style=&#34;color:#666;font-style:italic&#34;&gt;`gorm:&amp;#34;type:text;not null&amp;#34;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    SourceURL  &lt;span style=&#34;font-weight:bold;text-decoration:underline&#34;&gt;string&lt;/span&gt;         &lt;span style=&#34;color:#666;font-style:italic&#34;&gt;`gorm:&amp;#34;type:text&amp;#34;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    SourceTitle &lt;span style=&#34;font-weight:bold;text-decoration:underline&#34;&gt;string&lt;/span&gt;        &lt;span style=&#34;color:#666;font-style:italic&#34;&gt;`gorm:&amp;#34;type:text&amp;#34;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Domain     &lt;span style=&#34;font-weight:bold;text-decoration:underline&#34;&gt;string&lt;/span&gt;         &lt;span style=&#34;color:#666;font-style:italic&#34;&gt;`gorm:&amp;#34;type:text&amp;#34;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Metadata   datatypes.JSON &lt;span style=&#34;color:#666;font-style:italic&#34;&gt;`gorm:&amp;#34;type:jsonb&amp;#34;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    CreatedAt  time.Time&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    UpdatedAt  time.Time&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 class=&#34;heading&#34; id=&#34;api-highlights&#34;&gt;&#xA;  API Highlights&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#api-highlights&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;/auth/register, /auth/login, /auth/refresh, /auth/logout:&lt;/strong&gt; Secure user authentication&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;/notes:&lt;/strong&gt; CRUD for notes, with pagination, sorting, and filtering by domain/source&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;/notes/stats:&lt;/strong&gt; Returns note counts per domain for dashboard analytics&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;/user/profile, /user/password:&lt;/strong&gt; User info and password update endpoints&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 class=&#34;heading&#34; id=&#34;example-notes-pagination-handler&#34;&gt;&#xA;  Example: Notes Pagination Handler&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#example-notes-pagination-handler&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;font-weight:bold;font-style:italic;text-decoration:underline&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#666;font-weight:bold;font-style:italic&#34;&gt;GetNotes&lt;/span&gt;(c *fiber.Ctx) &lt;span style=&#34;font-weight:bold;text-decoration:underline&#34;&gt;error&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    userID := c.&lt;span style=&#34;color:#666;font-weight:bold;font-style:italic&#34;&gt;Locals&lt;/span&gt;(&lt;span style=&#34;color:#666;font-style:italic&#34;&gt;&amp;#34;user_id&amp;#34;&lt;/span&gt;).(uuid.UUID)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    page, _ := strconv.&lt;span style=&#34;color:#666;font-weight:bold;font-style:italic&#34;&gt;Atoi&lt;/span&gt;(c.&lt;span style=&#34;color:#666;font-weight:bold;font-style:italic&#34;&gt;Query&lt;/span&gt;(&lt;span style=&#34;color:#666;font-style:italic&#34;&gt;&amp;#34;page&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#666;font-style:italic&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    pageSize, _ := strconv.&lt;span style=&#34;color:#666;font-weight:bold;font-style:italic&#34;&gt;Atoi&lt;/span&gt;(c.&lt;span style=&#34;color:#666;font-weight:bold;font-style:italic&#34;&gt;Query&lt;/span&gt;(&lt;span style=&#34;color:#666;font-style:italic&#34;&gt;&amp;#34;page_size&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#666;font-style:italic&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;font-weight:bold;font-style:italic;text-decoration:underline&#34;&gt;var&lt;/span&gt; notes []models.Note&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    db := database.DB.&lt;span style=&#34;color:#666;font-weight:bold;font-style:italic&#34;&gt;Where&lt;/span&gt;(&lt;span style=&#34;color:#666;font-style:italic&#34;&gt;&amp;#34;user_id = ?&amp;#34;&lt;/span&gt;, userID)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;font-weight:bold;text-decoration:underline&#34;&gt;if&lt;/span&gt; domain := c.&lt;span style=&#34;color:#666;font-weight:bold;font-style:italic&#34;&gt;Query&lt;/span&gt;(&lt;span style=&#34;color:#666;font-style:italic&#34;&gt;&amp;#34;domain&amp;#34;&lt;/span&gt;); domain != &lt;span style=&#34;color:#666;font-style:italic&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        db = db.&lt;span style=&#34;color:#666;font-weight:bold;font-style:italic&#34;&gt;Where&lt;/span&gt;(&lt;span style=&#34;color:#666;font-style:italic&#34;&gt;&amp;#34;domain = ?&amp;#34;&lt;/span&gt;, domain)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    db = db.&lt;span style=&#34;color:#666;font-weight:bold;font-style:italic&#34;&gt;Order&lt;/span&gt;(&lt;span style=&#34;color:#666;font-style:italic&#34;&gt;&amp;#34;created_at DESC&amp;#34;&lt;/span&gt;).&lt;span style=&#34;color:#666;font-weight:bold;font-style:italic&#34;&gt;Offset&lt;/span&gt;((page-1)*pageSize).&lt;span style=&#34;color:#666;font-weight:bold;font-style:italic&#34;&gt;Limit&lt;/span&gt;(pageSize)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    db.&lt;span style=&#34;color:#666;font-weight:bold;font-style:italic&#34;&gt;Find&lt;/span&gt;(&amp;amp;notes)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;font-weight:bold;text-decoration:underline&#34;&gt;return&lt;/span&gt; c.&lt;span style=&#34;color:#666;font-weight:bold;font-style:italic&#34;&gt;JSON&lt;/span&gt;(notes)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 class=&#34;heading&#34; id=&#34;security--best-practices&#34;&gt;&#xA;  Security &amp;amp; Best Practices&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#security--best-practices&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;CORS:&lt;/strong&gt; Configured for frontend and extension origins&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Error Handling:&lt;/strong&gt; Consistent error responses with codes/messages&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;OpenAPI:&lt;/strong&gt; All endpoints documented for easy integration&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 class=&#34;heading&#34; id=&#34;conclusion&#34;&gt;&#xA;  Conclusion&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#conclusion&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;This architecture enables a seamless, cross-platform study assistant experience. The Chrome extension and Go backend are decoupled, secure, and scalable. The same backend can power future mobile or desktop apps, and the extension can be ported to other browsers with minimal changes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Audio Cloning</title>
      <link>/projects/audio-cloning/</link>
      <pubDate>Mon, 23 Jun 2025 11:14:19 +0530</pubDate>
      <guid>/projects/audio-cloning/</guid>
      <description>&lt;p&gt;This is an extension of the &lt;a href=&#34;/projects/video-translator&#34;&gt;Video Translator&lt;/a&gt; tool that generates cloned audio for short subtitles, improving the quality of audio output. The tool uses the &lt;a href=&#34;https://github.com/myshell-ai/OpenVoice&#34;&gt;OpenVoice&lt;/a&gt; and &lt;a href=&#34;https://github.com/myshell-ai/MeloTTS&#34;&gt;Melo TTS&lt;/a&gt; libraries to clone the audio output generated by the video translator tool.&lt;/p&gt;&#xA;&lt;p&gt;Challenges faced while integrating audio cloning:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Library Compatibility&lt;/strong&gt;: The libraries were not functional on Python 3.12, which I was using. They worked on Python 3.10, so including the TTS logic in the same script was not possible.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Short Subtitles&lt;/strong&gt;: The libraries needed a longer sample audio to clone the voice better. Some of the subtitles were short, leading to errors in generating the audio for those subtitles. I cloned the OpenVoice repository and updated the checks that required longer audio samples. I also added a check to skip the subtitles that were too short.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Fixes:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Video Translator</title>
      <link>/projects/video-translator/</link>
      <pubDate>Mon, 23 Jun 2025 11:14:19 +0530</pubDate>
      <guid>/projects/video-translator/</guid>
      <description>&lt;p&gt;I always wished to see the Japanese anime in english. But the audio was not available in English. I had to rely on subtitles. It was the same experience while watching other foreign language movies. Constantly watching the movie and subtitles was too much hassle.&lt;/p&gt;&#xA;&lt;p&gt;During my break recently, I thought of exploring the possibility of translating the videos to English. With the advancement in AI and open source libraries, I decided to build a basic tool/script to achieve the same. I wanted the script to do the following:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Experiences</title>
      <link>/experiences/</link>
      <pubDate>Mon, 09 Jun 2025 18:53:16 +0530</pubDate>
      <guid>/experiences/</guid>
      <description>&lt;h3 class=&#34;heading&#34; id=&#34;here-is-the-brief-summary-of-my-resume&#34;&gt;&#xA;  Here is the brief summary of my resume&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#here-is-the-brief-summary-of-my-resume&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Lead Software Developer at Emission Critical Pvt. Ltd. (May 2022-March 2025)&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Led backend development for a multi-tenant B2B SaaS platform enabling enterprise carbon footprint and sustainability tracking.&lt;/li&gt;&#xA;&lt;li&gt;Developed and optimized carbon calculation algorithms and database queries, reducing computation time by up to 50%.&lt;/li&gt;&#xA;&lt;li&gt;Built APIs and data pipelines for emission data ingestion, Scope 1/2/3 accounting, and supply chain tracking.&lt;/li&gt;&#xA;&lt;li&gt;Integrated secure authentication, full-text search, and scalable architecture for emission factor management.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tech Lead at Mind Sports League (March 2021-May 2022)&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>About Me</title>
      <link>/about/</link>
      <pubDate>Mon, 09 Jun 2025 17:12:52 +0530</pubDate>
      <guid>/about/</guid>
      <description>&lt;h2 class=&#34;heading&#34; id=&#34;hello-im-prateek-sharma&#34;&gt;&#xA;  Hello, I&amp;rsquo;m Prateek Sharma!&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#hello-im-prateek-sharma&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;I am a curious and passionate individual with an interest in backend development. I like exploring new technologies and learning new skills.&lt;/p&gt;&#xA;&lt;p&gt;I started my journy in September 2014 with an online gaming company named &amp;ldquo;Adda52&amp;rdquo; as a trainee. Since then, I have worked in startups in Transport, B2B SaaS industries with team sizes ranging from 4-40+. I learnt new languages and technologies like Java, Python, Node.js, Postgres, MongoDB, Redis, and more. I have also worked with AWS, Docker and Kubernetes to deploy and manage applications in production environments.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
